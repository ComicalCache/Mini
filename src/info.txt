Run Mini with a file(path) argument to open or create a file. Omit the file(path) to create a
"scratchpad" buffer with no backing file. A few things that make Mini interesting: it has (relative) line-numbers by
default, it has full unicode support, undo and redo, and it contains a full file browser.

Mini should feel familiar to those who have used VIm before. It features three kinds of buffers: a text buffer, an info
buffer, and a file browser buffer. You can switch to the text buffer, info buffer and files buffer, from any of the
buffers, by hitting 't', '?', or 'e' respectively. You can navigate and manipulate buffers using "motions". Typing a
string of numbers before a motion makes the motion execute the specified amount of times. All buffers support these
basic motions:
- 'h' | 'j' | 'k' | 'l' to move the cursor
- 'w' to skip to the next word
- 'b' to go back one word
- '<' | '>' to jump to the beginning/end of a line
- '.' to jump to the matching opposite bracket
- 'g' to go to the end of the file
- 'G' to go to the start of the file
- 'y' + motion to yank characters that would be skipped by the motion to the clipboard
- 'yy' to yank a line to the clipboard
- 'n' to jump to the next search match
- 'N' to jump to the previous search match

Additionally by pressing 'v' you can start a selection. A selection marks a character and selects the text "between"
the selected character and the current cursor position. This is visualized through highlighting the selected area.
Using 'yv' you can yank that selection.

Furthermore, you can enter command mode by pressing space. Using the up and down arrow you can cycle through the issued
command history. All buffers support following commands:
- 'q' to quit
- 'qq' to force quit, discarding unsaved changes
- '?' to see this message
- 'goto <line>:<column>' to jump to an absolute line number and column. If the column is omitted it jums to the
    beginning of the line. If the line is missing it jumps to the column in the current line. Particularly ':' does
    nothing.
- 's /<regex>/' to search text in a selection. See https://docs.rs/regex/latest/regex/index.html for information about
    the regex syntax.

Text Buffer:
This is probably the most important buffer. It contains the editor window where you can edit your files and is the
buffer that you'll be presented with when opening the editor. It has three modes: view mode, input mode, and command
mode.
    View Mode:
    View mode is the default mode when opening Mini or the text buffer. In view mode you can use the common motions to
    navigate or any of the following to manipulate the buffer:
    - 'x' to delete the character under the cursor
    - 'd' + motion to delete characters that would be skipped by the motion
    - 'dd' to delete a line
    - 'c' + motion to change characters that would be skipped by the motion
    - 'cc' to change a line
    - 'r' + char to replace the character under the cursor
    - 'p' to paste the clipboard at the cursor
    - 'u' to undo the last modification
    - 'U' to redo the last modification

    Additionally you can start a selection and press 'dv' or 'cv' to delete or yank the selection respectively.

    Write Mode:
    Write mode is the mode where you can input text and manipulate the buffer this way, analog to VIm's insertion mode.
    You can enter write mode by pressing any of the following motions and exit it using the escape key:
    - 'i' to enter write mode
    - 'a' to enter write mode one character after the current
    - 'A' to enter write mode at the end of the line
    - 'o' to enter write mode one line under the current
    - 'O' to enter write mode one line above the current

    Additionally you can use the arrow keys to move the cursor, or alt + '←' or alt + '→' to skip words in the
    respective direction.

    Command Mode:
    In command mode you can issue editor commands. You enter command mode by pressing space, typing in your command and
    hitting enter to execute it, or escape to abort. The following are valid commands:
    - 'w' to write the buffer to file
    - 'w <path>' to write this/all future writes to the specified path
    - 'o ?<path>' to open a file and replace the buffer (if the path is omitted a new "scratchpad" buffer with no
        backing file is created)
    - 'oo ?<path>' to open a file and replace the buffer, discarding unsaved changes (if the path is omitted a new
        "scratchpad" buffer with no backing file is created)
     - 'r /<regex>/<replace>/' to replace text in a selection. See https://docs.rs/regex/latest/regex/index.html for
        information about the regex and replace syntax.

Info Buffer:
The info buffer is a read only buffer that displays errors, warnings or other types of information. It has two modes:
view mode and command mode.
    View Mode:
    View mode is the default mode when opening the info buffer.

    Command Mode:
    In command mode you can issue editor commands. You enter command mode by pressing space, typing in your command and
    hitting enter to execute it, or escape to abort. The following are valid commands:
    - 'clear' to clear the info buffer

Files Buffer:
The files buffer is a small file browser to browse directories, starting initially at the current path, and open files.
You can press 'r' to refresh the file list and enter to open a directory or file. It has two modes: view mode and
command mode.
    View Mode:
    View mode is the default mode when opening the files buffer. In view mode you can use the common motions to
    navigate or any of the following to manipulate the buffer:
    - 'd' to remove the file or directory on the current line (see the 'rm' command bellow for more info)
    - 'D' to recursively remove the directory on the current line (see the 'rm!' command bellow for more info)

    Command Mode:
    In command mode you can issue editor commands. You enter command mode by pressing space, typing in your command and
    hitting enter to execute it, or escape to abort. The following are valid commands:
    - 'mk <path>' to create a file or directory. Use a trailing '/' to create a directory. Creates the needed directory
        hierarchy if needed.
    - 'rm <path>' to remove a file or empty directory. Use a trailing '/' to remove a directory.
    - 'rm! <path>' to recursively remove a directory and all of its contents. Use with caution! Use a trailing '/' to
        remove the directory and its contents.
